git config: This command sets the author name and email address respectively to be used with your commits
      # git config –global user.name "ahfitwi"; 
      # git config –global user.email “ahfitwi@gmail.com”
git init: This command is used to start a new repository.
      # git init [repository name]
      # git init C:\Users\ahfitwi\Documents\GitHub\HelpfulMaterials
git clone: This command is used to obtain a repository from an existing URL.
      # git clone [url]
      # git clone https://github.com/ahfitwi/PyAutomation.git
git add: This command adds a file to the staging area.
      # git add [file]  
      # git add gitcmds.txt
git commit: This command records or snapshots the file permanently in the version history.
      # git commit -m “[ Type in the commit message]” 
      # git commit -a : This command commits any files you’ve added with the git add command and also commits any files you’ve changed since then.
git diff: This command shows the file differences which are not yet staged.
      # git diff –staged: This command shows the differences between the files in the staging area and the latest version present.
git reset: This command unstages the file, but it preserves the file contents.
      # git reset [file]
      # git reset gitcmds.txt
      # git reset [commit]: This command undoes all the commits after the specified commit and preserves the changes locally.
      # git reset 78fs86sfsf67sf8s76f7sf7sf67sf67s6f7s8
      # git reset –hard [commit]: This command discards all history and goes back to the specified commit.
git status: This command lists all the files that have to be committed.
      # git status
git rm: This command deletes the file from your working directory and stages the deletion.
      # git rm [file] 
      # git rm gitcmds.txt
git log: This command is used to list the version history for the current branch.
      # git log
      # git log –follow[file]: this command lists version history for a file, including the renaming of files also.
      # git log --follow gitcmds.txt
git show: This command shows the metadata and content changes of the specified commit
      # git show [commit]
      # git show 78fs86sfsf67sf8s76f7sf7sf67sf67s6f7s8
git tag: This command is used to give tags to the specified commit.
      # git tag [commitID]
      # git tag 78fs86sfsf67sf8s76f7sf7sf67sf67s6f7s8
git branch: This command lists all the local branches in the current repository.
      # git branch
      # git branch [branch name]: git branch branch_1 --> This command creates a new branch.
      # git branch -d [branch name]: This command deletes the feature branch.
git checkout: This command is used to switch from one branch to another.
      # git checkout [branch name]: git checkout branch_1
      # git checkout -b [branch name]: This command creates a new branch and also switches to it.
git merge: This command merges the specified branch’s history into the current branch.
      # git merge [branch name]: git merge branch_2
git remote: This command is used to connect your local repository to the remote server.
      # git remote add [variable name] [Remote Server Link]
      # git remote add origin https://github.com/ahfitwi/PyAutomation.git
git push: This command sends the committed changes of master branch to your remote repository.
      # git push [variable name] master
      # git push origin master
      # git push [variable name] [branch]: This command sends the branch commits to your remote repository.
      # git push origin master
      # git push –all [variable name]: This command pushes all branches to your remote repository.
      # git push --all origin
      # git push [variable name] :[branch name]: This command deletes a branch on your remote repository.
      # git push origin : branch_2
git pull: This command fetches and merges changes on the remote server to your working directory.
      # git pull [Repository Link] 
      # git pull https://github.com/ahfitwi/PyAutomation.git
git stash: This command temporarily stores all the modified tracked files.
      # git stach save
      # git stash pop: This command restores the most recently stashed files.
      # git stash list: This command lists all stashed changesets.
      # git stash drop: This command discards the most recently stashed changeset
#----------------------------------------------------------------------------------------------------------
